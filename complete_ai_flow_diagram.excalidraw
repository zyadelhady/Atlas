{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "id": "main-title",
      "x": 400,
      "y": 20,
      "width": 600,
      "height": 40,
      "fontSize": 32,
      "fontFamily": 1,
      "text": "Atlas AI Agent - Complete Flow",
      "textAlign": "center",
      "strokeColor": "#1e88e5",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100
    },
    {
      "type": "rectangle",
      "id": "frontend-section",
      "x": 100,
      "y": 100,
      "width": 350,
      "height": 180,
      "strokeColor": "#9c27b0",
      "backgroundColor": "#e1bee7",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "frontend-title",
      "x": 120,
      "y": 110,
      "width": 310,
      "height": 30,
      "fontSize": 22,
      "fontFamily": 1,
      "text": "FRONTEND (Next.js/React)",
      "textAlign": "center",
      "strokeColor": "#4a148c",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "frontend-details",
      "x": 120,
      "y": 145,
      "width": 310,
      "height": 120,
      "fontSize": 14,
      "fontFamily": 1,
      "text": "1. User types query in chat UI\n2. Check sessionId (localStorage)\n   • If none: generate UUID\n   • Store in localStorage\n3. Add user message to UI\n4. Send POST to /ai endpoint:\n   { query, sessionId }\n5. Stream response chunks\n6. Update UI in real-time",
      "textAlign": "left",
      "strokeColor": "#4a148c"
    },
    {
      "type": "arrow",
      "id": "frontend-to-backend",
      "x": 275,
      "y": 280,
      "width": 0,
      "height": 60,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 60]]
    },
    {
      "type": "text",
      "id": "http-label",
      "x": 290,
      "y": 300,
      "width": 200,
      "height": 20,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "HTTP POST /ai",
      "textAlign": "left",
      "strokeColor": "#1e88e5"
    },
    {
      "type": "rectangle",
      "id": "backend-entry",
      "x": 100,
      "y": 360,
      "width": 350,
      "height": 120,
      "strokeColor": "#00897b",
      "backgroundColor": "#b2dfdb",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "backend-entry-title",
      "x": 120,
      "y": 370,
      "width": 310,
      "height": 25,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "BACKEND ENTRY POINT",
      "textAlign": "center",
      "strokeColor": "#004d40",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "backend-entry-details",
      "x": 120,
      "y": 400,
      "width": 310,
      "height": 70,
      "fontSize": 13,
      "fontFamily": 1,
      "text": "@app.post(\"/ai\") - FastAPI endpoint\n\n• Receives: Query + SessionId\n• Spawns 2 parallel tasks:\n  1. hybrid_search(query)\n  2. get_formatted_history(sessionId)",
      "textAlign": "left",
      "strokeColor": "#004d40"
    },
    {
      "type": "arrow",
      "id": "backend-split",
      "x": 275,
      "y": 480,
      "width": 0,
      "height": 40,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 40]]
    },
    {
      "type": "arrow",
      "id": "split-left",
      "x": 275,
      "y": 520,
      "width": -200,
      "height": 0,
      "strokeColor": "#43a047",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [-200, 0]]
    },
    {
      "type": "arrow",
      "id": "split-right",
      "x": 275,
      "y": 520,
      "width": 450,
      "height": 0,
      "strokeColor": "#fb8c00",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [450, 0]]
    },
    {
      "type": "rectangle",
      "id": "hybrid-search-box",
      "x": 50,
      "y": 550,
      "width": 1300,
      "height": 50,
      "strokeColor": "#43a047",
      "backgroundColor": "#c8e6c9",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "hybrid-search-title",
      "x": 70,
      "y": 560,
      "width": 1260,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "PARALLEL TASK 1: hybrid_search(query, db)",
      "textAlign": "center",
      "strokeColor": "#2e7d32",
      "fontWeight": "bold"
    },
    {
      "type": "arrow",
      "id": "hybrid-down",
      "x": 700,
      "y": 600,
      "width": 0,
      "height": 30,
      "strokeColor": "#43a047",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 30]]
    },
    {
      "type": "rectangle",
      "id": "preprocessing-box",
      "x": 450,
      "y": 650,
      "width": 500,
      "height": 140,
      "strokeColor": "#7b1fa2",
      "backgroundColor": "#ce93d8",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "preprocessing-title",
      "x": 470,
      "y": 660,
      "width": 460,
      "height": 25,
      "fontSize": 18,
      "fontFamily": 1,
      "text": "STEP 0: Query Preprocessing (Gemini AI)",
      "textAlign": "center",
      "strokeColor": "#4a148c",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "preprocessing-details",
      "x": 470,
      "y": 690,
      "width": 460,
      "height": 90,
      "fontSize": 13,
      "fontFamily": 1,
      "text": "async def preprocess_query(query):\n• Sends query to Gemini 1.5 Flash (temp=0)\n• AI expands abbreviations (df → DataFrame)\n• AI adds synonyms (merge → join, concatenate)\n• AI clarifies ambiguous terms\n• Returns improved query\n• Fallback to original on failure",
      "textAlign": "left",
      "strokeColor": "#4a148c"
    },
    {
      "type": "arrow",
      "id": "preprocess-down",
      "x": 700,
      "y": 790,
      "width": 0,
      "height": 30,
      "strokeColor": "#7b1fa2",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 30]]
    },
    {
      "type": "rectangle",
      "id": "improved-query",
      "x": 500,
      "y": 840,
      "width": 400,
      "height": 60,
      "strokeColor": "#7b1fa2",
      "backgroundColor": "#f3e5f5",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "improved-query-text",
      "x": 520,
      "y": 850,
      "width": 360,
      "height": 40,
      "fontSize": 14,
      "fontFamily": 1,
      "text": "Improved Query:\n\"merge join concatenate DataFrames pandas\"",
      "textAlign": "center",
      "strokeColor": "#4a148c",
      "fontWeight": "bold"
    },
    {
      "type": "arrow",
      "id": "improved-split",
      "x": 700,
      "y": 900,
      "width": 0,
      "height": 40,
      "strokeColor": "#1e88e5",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 40]]
    },
    {
      "type": "arrow",
      "id": "search-left",
      "x": 700,
      "y": 940,
      "width": -300,
      "height": 0,
      "strokeColor": "#43a047",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [-300, 0]]
    },
    {
      "type": "arrow",
      "id": "search-right",
      "x": 700,
      "y": 940,
      "width": 300,
      "height": 0,
      "strokeColor": "#fb8c00",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [300, 0]]
    },
    {
      "type": "rectangle",
      "id": "semantic-search",
      "x": 100,
      "y": 980,
      "width": 280,
      "height": 180,
      "strokeColor": "#43a047",
      "backgroundColor": "#c8e6c9",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "semantic-title",
      "x": 120,
      "y": 990,
      "width": 240,
      "height": 25,
      "fontSize": 17,
      "fontFamily": 1,
      "text": "STEP 1: Semantic Search",
      "textAlign": "center",
      "strokeColor": "#2e7d32",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "semantic-details",
      "x": 120,
      "y": 1020,
      "width": 240,
      "height": 130,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "• Convert improved query\n  to 768-dim embedding\n• Use GoogleGenerativeAI\n  Embeddings (embedding-001)\n• Query PGVectorStore:\n  asimilarity_search_\n  with_relevance_scores()\n• Returns top 10 results\n• Each with similarity score\n  (0.0 to 1.0)",
      "textAlign": "left",
      "strokeColor": "#2e7d32"
    },
    {
      "type": "rectangle",
      "id": "keyword-search",
      "x": 1020,
      "y": 980,
      "width": 280,
      "height": 180,
      "strokeColor": "#fb8c00",
      "backgroundColor": "#ffe0b2",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "keyword-title",
      "x": 1040,
      "y": 990,
      "width": 240,
      "height": 25,
      "fontSize": 17,
      "fontFamily": 1,
      "text": "STEP 2: Keyword Search",
      "textAlign": "center",
      "strokeColor": "#e65100",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "keyword-details",
      "x": 1040,
      "y": 1020,
      "width": 240,
      "height": 130,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "• PostgreSQL Full-Text\n  Search (FTS)\n• to_tsvector('english',\n  content)\n• plainto_tsquery()\n• Exact token matching\n• Returns top 5 results\n• No scores (assigned 0.5\n  later)",
      "textAlign": "left",
      "strokeColor": "#e65100"
    },
    {
      "type": "arrow",
      "id": "semantic-down-arrow",
      "x": 240,
      "y": 1160,
      "width": 0,
      "height": 40,
      "strokeColor": "#43a047",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 40]]
    },
    {
      "type": "arrow",
      "id": "keyword-down-arrow",
      "x": 1160,
      "y": 1160,
      "width": 0,
      "height": 40,
      "strokeColor": "#fb8c00",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 40]]
    },
    {
      "type": "rectangle",
      "id": "semantic-results",
      "x": 100,
      "y": 1220,
      "width": 280,
      "height": 120,
      "strokeColor": "#43a047",
      "backgroundColor": "#e8f5e9",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "semantic-results-text",
      "x": 120,
      "y": 1230,
      "width": 240,
      "height": 100,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "Filter Results (score ≥ 0.7)\n\nDoc A: 0.85 ✓\nDoc B: 0.78 ✓\nDoc C: 0.72 ✓\nDoc D: 0.65 ✗ (filtered out)\nDoc E: 0.60 ✗ (filtered out)",
      "textAlign": "left",
      "strokeColor": "#2e7d32"
    },
    {
      "type": "rectangle",
      "id": "keyword-results",
      "x": 1020,
      "y": 1220,
      "width": 280,
      "height": 120,
      "strokeColor": "#fb8c00",
      "backgroundColor": "#fff3e0",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "keyword-results-text",
      "x": 1040,
      "y": 1230,
      "width": 240,
      "height": 100,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "Raw Keyword Matches\n\nDoc A (duplicate)\nDoc F\nDoc G\nDoc H\n\n(All assigned score 0.5)",
      "textAlign": "left",
      "strokeColor": "#e65100"
    },
    {
      "type": "arrow",
      "id": "merge-left-arrow",
      "x": 240,
      "y": 1340,
      "width": 360,
      "height": 80,
      "strokeColor": "#1e88e5",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [360, 80]]
    },
    {
      "type": "arrow",
      "id": "merge-right-arrow",
      "x": 1160,
      "y": 1340,
      "width": -360,
      "height": 80,
      "strokeColor": "#1e88e5",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [-360, 80]]
    },
    {
      "type": "rectangle",
      "id": "deduplication",
      "x": 450,
      "y": 1440,
      "width": 500,
      "height": 140,
      "strokeColor": "#8e24aa",
      "backgroundColor": "#e1bee7",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "dedup-title",
      "x": 470,
      "y": 1450,
      "width": 460,
      "height": 25,
      "fontSize": 18,
      "fontFamily": 1,
      "text": "STEP 3: Deduplication & Merging",
      "textAlign": "center",
      "strokeColor": "#4a148c",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "dedup-details",
      "x": 470,
      "y": 1480,
      "width": 460,
      "height": 90,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "unique_docs = {}\n• Add semantic results first (priority)\n  - Doc A: 0.85, Doc B: 0.78, Doc C: 0.72\n• Add keyword results if NOT duplicate\n  - Doc A: skip (duplicate)\n  - Doc F: 0.5, Doc G: 0.5, Doc H: 0.5\n• Sort by score (highest first)",
      "textAlign": "left",
      "strokeColor": "#4a148c"
    },
    {
      "type": "arrow",
      "id": "dedup-down",
      "x": 700,
      "y": 1580,
      "width": 0,
      "height": 40,
      "strokeColor": "#8e24aa",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 40]]
    },
    {
      "type": "rectangle",
      "id": "sorted-results",
      "x": 450,
      "y": 1640,
      "width": 500,
      "height": 130,
      "strokeColor": "#d32f2f",
      "backgroundColor": "#ffcdd2",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "sorted-title",
      "x": 470,
      "y": 1650,
      "width": 460,
      "height": 25,
      "fontSize": 18,
      "fontFamily": 1,
      "text": "Hybrid Search Results (Sorted)",
      "textAlign": "center",
      "strokeColor": "#b71c1c",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "sorted-text",
      "x": 470,
      "y": 1680,
      "width": 460,
      "height": 80,
      "fontSize": 13,
      "fontFamily": 1,
      "text": "Returns: [(Document, score), ...]\n1. Doc A: 0.85 (semantic)\n2. Doc B: 0.78 (semantic)\n3. Doc C: 0.72 (semantic)\n4. Doc F: 0.5 (keyword)\n5. Doc G: 0.5 (keyword)",
      "textAlign": "left",
      "strokeColor": "#b71c1c"
    },
    {
      "type": "rectangle",
      "id": "history-box",
      "x": 1020,
      "y": 550,
      "width": 330,
      "height": 300,
      "strokeColor": "#fb8c00",
      "backgroundColor": "#ffe0b2",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "history-title",
      "x": 1040,
      "y": 560,
      "width": 290,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "PARALLEL TASK 2: History",
      "textAlign": "center",
      "strokeColor": "#e65100",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "history-details",
      "x": 1040,
      "y": 595,
      "width": 290,
      "height": 240,
      "fontSize": 13,
      "fontFamily": 1,
      "text": "get_formatted_history(\n  sessionId, db\n)\n\n1. Query PostgreSQL:\n   SELECT * FROM chat_history\n   WHERE session_id = ?\n   ORDER BY timestamp\n   LIMIT 10\n\n2. Format as string:\n   User: <prompt>\n   AI: <response>\n   ...\n\n3. Returns last 10 messages\n   for context",
      "textAlign": "left",
      "strokeColor": "#e65100"
    },
    {
      "type": "arrow",
      "id": "history-down",
      "x": 1185,
      "y": 850,
      "width": 0,
      "height": 600,
      "strokeColor": "#fb8c00",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 600]]
    },
    {
      "type": "arrow",
      "id": "results-to-prompt",
      "x": 700,
      "y": 1770,
      "width": 0,
      "height": 50,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 50]]
    },
    {
      "type": "arrow",
      "id": "history-merge",
      "x": 1185,
      "y": 1450,
      "width": -235,
      "height": 400,
      "strokeColor": "#fb8c00",
      "strokeWidth": 2,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [-235, 400]]
    },
    {
      "type": "rectangle",
      "id": "prompt-building",
      "x": 350,
      "y": 1840,
      "width": 700,
      "height": 200,
      "strokeColor": "#00897b",
      "backgroundColor": "#b2dfdb",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "prompt-title",
      "x": 370,
      "y": 1850,
      "width": 660,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "STEP 4: Build Final Prompt for LLM",
      "textAlign": "center",
      "strokeColor": "#004d40",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "prompt-details",
      "x": 370,
      "y": 1885,
      "width": 660,
      "height": 145,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "1. Extract document content from search results:\n   context_text = \"\\n\\n---\\n\\n\".join([doc.page_content for doc, _ in results])\n\n2. Use PROMPT_TEMPLATE with 3 modes:\n   • Knowledge Mode: Strict (only from docs)\n   • Code Mode: Can generate new examples\n   • Social Mode: Handle greetings naturally\n\n3. Inject variables:\n   prompt = template.format(\n     message=query.query,  # Original user query\n     history=formatted_history,  # Last 10 messages\n     knowledge=context_text  # Retrieved docs\n   )",
      "textAlign": "left",
      "strokeColor": "#004d40"
    },
    {
      "type": "arrow",
      "id": "prompt-to-llm",
      "x": 700,
      "y": 2040,
      "width": 0,
      "height": 50,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 50]]
    },
    {
      "type": "rectangle",
      "id": "llm-generation",
      "x": 350,
      "y": 2110,
      "width": 700,
      "height": 180,
      "strokeColor": "#673ab7",
      "backgroundColor": "#d1c4e9",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "llm-title",
      "x": 370,
      "y": 2120,
      "width": 660,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "STEP 5: LLM Response Generation (Gemini)",
      "textAlign": "center",
      "strokeColor": "#311b92",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "llm-details",
      "x": 370,
      "y": 2155,
      "width": 660,
      "height": 125,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "llm.stream(prompt) - Gemini 1.5 Flash (temp=0)\n\n• Model receives:\n  - User's original question\n  - Conversation history (last 10 msgs)\n  - Retrieved knowledge (sorted docs)\n• Model generates response chunk-by-chunk\n• Each chunk sent immediately to frontend\n• Full response accumulated in full_response variable\n• Model follows 3-mode logic (Knowledge/Code/Social)",
      "textAlign": "left",
      "strokeColor": "#311b92"
    },
    {
      "type": "arrow",
      "id": "llm-to-stream",
      "x": 700,
      "y": 2290,
      "width": 0,
      "height": 50,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 50]]
    },
    {
      "type": "rectangle",
      "id": "streaming",
      "x": 350,
      "y": 2360,
      "width": 700,
      "height": 160,
      "strokeColor": "#f57c00",
      "backgroundColor": "#ffe0b2",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "streaming-title",
      "x": 370,
      "y": 2370,
      "width": 660,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "STEP 6: Stream Response to Frontend",
      "textAlign": "center",
      "strokeColor": "#e65100",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "streaming-details",
      "x": 370,
      "y": 2405,
      "width": 660,
      "height": 105,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "async def generate():\n  for chunk in chain.stream(prompt):\n    full_response += chunk.content\n    yield chunk.content  # Send immediately\n\nreturn StreamingResponse(generate())\n\n• Frontend receives chunks via ReadableStream\n• UI updates in real-time (typing effect)\n• Better UX (no waiting for full response)",
      "textAlign": "left",
      "strokeColor": "#e65100"
    },
    {
      "type": "arrow",
      "id": "stream-to-save",
      "x": 700,
      "y": 2520,
      "width": 0,
      "height": 50,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 50]]
    },
    {
      "type": "rectangle",
      "id": "save-history",
      "x": 350,
      "y": 2590,
      "width": 700,
      "height": 140,
      "strokeColor": "#00897b",
      "backgroundColor": "#b2dfdb",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "save-title",
      "x": 370,
      "y": 2600,
      "width": 660,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "STEP 7: Save to Chat History",
      "textAlign": "center",
      "strokeColor": "#004d40",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "save-details",
      "x": 370,
      "y": 2635,
      "width": 660,
      "height": 85,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "chat_entry = ChatHistory(\n  session_id=query.sessionId,\n  prompt=query.query,  # Original user query\n  response=full_response  # Complete AI response\n)\ndb.add(chat_entry)\nawait db.commit()\n\n• Stored in PostgreSQL for future context",
      "textAlign": "left",
      "strokeColor": "#004d40"
    },
    {
      "type": "arrow",
      "id": "save-to-frontend",
      "x": 700,
      "y": 2730,
      "width": 0,
      "height": 50,
      "strokeColor": "#1e88e5",
      "strokeWidth": 3,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "points": [[0, 0], [0, 50]]
    },
    {
      "type": "rectangle",
      "id": "frontend-display",
      "x": 350,
      "y": 2800,
      "width": 700,
      "height": 140,
      "strokeColor": "#9c27b0",
      "backgroundColor": "#e1bee7",
      "fillStyle": "solid",
      "strokeWidth": 3,
      "roughness": 1,
      "opacity": 100,
      "roundness": { "type": 3 }
    },
    {
      "type": "text",
      "id": "display-title",
      "x": 370,
      "y": 2810,
      "width": 660,
      "height": 30,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "STEP 8: Display in Chat UI",
      "textAlign": "center",
      "strokeColor": "#4a148c",
      "fontWeight": "bold"
    },
    {
      "type": "text",
      "id": "display-details",
      "x": 370,
      "y": 2845,
      "width": 660,
      "height": 85,
      "fontSize": 12,
      "fontFamily": 1,
      "text": "Frontend (Chat.tsx):\n• Receives chunks from ReadableStream\n• Updates AI message in real-time\n• Applies syntax highlighting (react-syntax-highlighter)\n• Auto-scrolls to latest message\n• Shows \"Typing...\" until first chunk\n• Completed response displayed with formatted code blocks",
      "textAlign": "left",
      "strokeColor": "#4a148c"
    },
    {
      "type": "text",
      "id": "complete-label",
      "x": 500,
      "y": 2970,
      "width": 400,
      "height": 40,
      "fontSize": 24,
      "fontFamily": 1,
      "text": "✓ User sees complete AI response!",
      "textAlign": "center",
      "strokeColor": "#2e7d32",
      "fontWeight": "bold"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}
